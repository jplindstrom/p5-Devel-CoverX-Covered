<!doctype html>
%html{:lang => "en"}
  %head
    %meta{:charset => "utf-8"}/
    %title PRESENTATION TITLE
    %meta{:content => "Devel::CoverX::Covered Lightning Talk", :name => "description"}/
    %meta{:content => "Johan Lindstrom", :name => "author"}/
    %meta{:content => "yes", :name => "apple-mobile-web-app-capable"}/
    %meta{:content => "black-translucent", :name => "apple-mobile-web-app-status-bar-style"}/
    %meta{:content => "width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no", :name => "viewport"}/
    %link{:href => "reveal.js/css/reveal.min.css", :rel => "stylesheet"}/
    %link#theme{:href => "reveal.js/css/theme/default.css", :rel => "stylesheet"}/
    / For syntax highlighting
    %link{:href => "reveal.js/lib/css/zenburn.css", :rel => "stylesheet"}/


    / For nice fonts, load more here
    / Go to http://www.google.com/webfonts
    / * Add to collection
    / * Use
    / * pick which styles
    / * find the link to add here
    %link{ :href=> 'http://fonts.googleapis.com/css?family=Merriweather:400,700', :rel => 'stylesheet', :type => 'text/css'}
    %link{ :href=> 'http://fonts.googleapis.com/css?family=Open+Sans:600', :rel => 'stylesheet', :type => 'text/css'}
    -# / Nice fonts combos:
    -# / http://designshack.net/articles/css/10-great-google-font-combinations-you-can-copy/

    %link{ :rel => "stylesheet", :href => "index.css" }


    / Override the reveal.js fonts here, after loading them above
    :css
      .reveal h1 {
        font-family: 'Merriweather', serif;
        text-transform: none;
        line-height: 1.0em;
      }
      .reveal h2 {
        font-family: 'Merriweather', serif;
        text-transform: none;
      }
      .reveal h3 {
        font-family: 'Open Sans', sans-serif;
        text-transform: none;
      }
      .reveal p {
        font-family: 'Open Sans', sans-serif;
        text-transform: none;
      }

      /* Misc layout */
      table.centric {
        margin-left: auto;
        margin-right: auto;
      }
      table.centric td {
        vertical-align: middle;
        text-align: center;
      }

      /* Styles for the specific data-state for the last slide %/
      html.the-end .state-background {
        background-color: rgba(0,0,0, 0.8);
      }


      .strike {
        text-decoration: line-through;
      }



      /* Presentation CSS */
      table.coverage td {
        padding-left: 20px;
        padding-right: 20px;
        padding-bottom: 6px;
      }
      td.covered {
        background-color: #096;
      }
      td.covered1 {
        background-color: #060;
      }
      td.covered2 {
        background-color: #096;
      }
      td.covered3 {
        background-color: #0C9;
      }



    / If the query includes 'print-pdf', use the PDF print sheet
    :javascript
      document.write( '<link rel="stylesheet" href="reveal.js/css/print/' + ( window.location.search.match( /print-pdf/gi ) ? 'pdf' : 'paper' ) + '.css" type="text/css" media="print">' );
    <script src="reveal.js/lib/js/html5shiv.js"></script>
  %body
    .reveal
      / Any section element inside of this container is displayed as a slide
      .slides

        %section
          %h1 Beyond
          %h1 Devel::Cover

          %p &nbsp;
          %p &nbsp;
          %p Johan Lindstrom - @jplindstrom



        %section
          %h1 Devel::Cover
          %h3 Code Coverage Tool


        %section
          %h3 Which code is covered by tests?
          %p &nbsp;

          %div.side-by-side
            %div.side
              %table.coverage{ :width => "100%" }
                %tbody
                  %tr
                    %td.covered App::Controller::Book
                  %tr
                    %td App::Controller::Author
                  %tr
                    %td.covered App::Schema::Book
                  %tr
                    %td App::Schema::Author
                  %tr
                    %td.covered App::Subscription
                  %tr
                    %td.covered Book::ISBN
            %div.side
              %table.coverage{ :width => "100%" }
                %tbody
                  %tr
                    %td t/app/controller_book.t
                  %tr
                    %td t/app/schema/book.t
                  %tr
                    %td t/subscribe.t
                  %tr
                    %td t/subscribe-unavailable.t



          %aside.notes
            %p Code coverage tool
            %p Run with D::C enabled
            %p Which part of the source is tested by your test suite



        %section
          %h1 Basic markup
          %small
            %p Text
            %p More text
          %p not too bad
          %aside.notes
            %ul
              %li Notes, maybe use markdown for this instead

        %section
          %h2 A table
          .small with inline styles
          .small (should maybe be in the css section)
          %table.centric
            %tr
              %td(style="vertical-align: top")
                %small Hi-tech
              %td(rowspan="2")
                / A Google Chart image
                %img(src="http://chart.googleapis.com/chart?chf=bg,s,676767&chs=600x300&cht=lxy&chco=3072F3,FF9900&chds=0,10,0,10&chd=t:1,2,3,3,4,5,6,7,8,9,10|1,2,3,3,4,5,6,7,8,9,10|1,2,3,4,5,6,7,8,9,10|10,5,3,2,1,1,1,1,1,1,1,1&chdlp=t&chls=4,21,1|3&chma=5,5,30,25|32" width="600" height="300" alt="" border="0")
              %td(style="vertical-align: top")
                Many
            %tr
              %td(style="vertical-align: bottom")
                One
              -# %td
              %td(style="vertical-align: bottom")
                %small Low-tech

        %section
          %h3 Code

          / The following is required to not have Haml mess up whitespace
          %pre
            %code.perl
              :preserve
                &nbsp;
                    print("Hello\n");
                    my $dbh = DBI->connect("dbi:...");

                    say "Nice one";


          %p That's it


        %section(data-state="the-end")
          %h1 __END__
          %br
          %h3 Thank you!



    %script{:src => "reveal.js/lib/js/head.min.js"}
    %script{:src => "reveal.js/js/reveal.min.js"}
    :javascript
      // Full list of configuration options available here: JPL
      // https://github.com/hakimel/reveal.js#configuration
      Reveal.initialize({
        controls: false,
        progress: false,
        history: true,
        center: true,

        theme: Reveal.getQueryHash().theme, // available themes are in /css/theme
        transition: Reveal.getQueryHash().transition || 'fade', // default/cube/page/concave/zoom/linear/fade/none

        // Optional libraries used to extend on reveal.js
        dependencies: [
            { src: 'reveal.js/lib/js/classList.js', condition: function() { return !document.body.classList; } },
            { src: 'reveal.js/plugin/markdown/showdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
            { src: 'reveal.js/plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
            { src: 'reveal.js/plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
            { src: 'reveal.js/plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
            { src: 'reveal.js/plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
            // { src: 'reveal.js/plugin/remotes/remotes.js', async: true, condition: function() { return !!document.body.classList; } }
        ]
      });
